/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) 
    {
        ArrayList<Integer> al=new ArrayList<>();
        
        ListNode curr=head;
        
        while(curr!=null)
        {
            al.add(curr.val);
            curr=curr.next;
        }
        curr=head;
        int i=0,n=k;
        while(i+k <= al.size())
        {
            while(n > 0)
            {
                curr.val=al.get(n+i-1);
                curr=curr.next;
                n--;
            }
            i+=k;
            n=k;
        }
        return head;
    }
}
